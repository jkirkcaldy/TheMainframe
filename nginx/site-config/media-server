server {
        listen 10.10.0.253:80;
    if ($host = sso.themainframe.co.uk) {
        return 301 https://$host$request_uri;
    }
    server_name sso.themainframe.co.uk;
    return 301 https://$host$request_uri;
}

server {
	listen 10.10.0.253:443 ssl http2 default_server;
  server_name sso.themainframe.co.uk;
  access_log /var/log/nginx/media-access.log;
  error_log /var/log/nginx/media-error.log;

  include /etc/nginx/config/errorpages.conf;
  include /etc/nginx/config/strong-ssl.conf;
  include /etc/nginx/config/cloudflare.conf;
  include /etc/nginx/config/proxy.conf;

  return 444;

location ~ /auth-(.*) {
	internal;
	rewrite ^/auth-(.*) /api/?v1/auth&group=$1;
}

# Organizr
  location  / {
    proxy_pass  http://192.168.1.249:9983/;
  }
######################### Content Downloading ########################
# Radarr
location /radarr {
	auth_request /auth-1;
    proxy_pass http://192.168.1.249:7879;
    location /radarr/api {
        auth_request off;
        proxy_pass http://192.168.1.249:7879/radarr/api;
        }
	proxy_set_header Accept-Encoding "";
	sub_filter
	'</head>'
	'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/radarr/aquamarine.css">
	</head>';
	sub_filter_once on;
  }

# Radarr4k
location /radarr4k {
	auth_request /auth-1;
    proxy_pass http://192.168.1.249:7878;
    location /radarr4k/api {
        auth_request off;
        proxy_pass http://192.168.1.249:7878/radarr4k/api;
        }
	proxy_set_header Accept-Encoding "";
	sub_filter
	'</head>'
	'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/radarr/aquamarine.css">
	</head>';
	sub_filter_once on;
  }

# Sonarr
location /sonarr {
	auth_request /auth-1;
    proxy_pass http://10.10.0.11:8889;
    location /sonarr/api {
        auth_request off;
        proxy_pass http://10.10.0.11:8889/sonarr/api;
        }
	proxy_set_header Accept-Encoding "";
	sub_filter
	'</head>'
	'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/sonarr/aquamarine.css">
	</head>';
	sub_filter_once on;
  }

# Bazarr
location /bazarr {
	auth_request /auth-0;
    proxy_pass http://192.168.1.249:6767;
  include /etc/nginx/config/cloudflare.conf;
  include /etc/nginx/config/proxy.conf;
        location /bazarr/api {
        auth_request off;
        proxy_pass http://192.168.1.249:6767/bazarr/api;
        }
        proxy_set_header Accept-Encoding "";
        sub_filter
        '</head>'
        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/bazarr/aquamarine.css">
        </head>';
        sub_filter_once on;
  }
######################### Content Management ########################


#OMBIV3

 location /requests {
     return 301 $scheme://$host/requests/;
}
location /requests/ {
	auth_request /auth-4;
    proxy_pass http://192.168.1.249:3579;
    include /etc/nginx/config/proxy.conf;
    include /etc/nginx/config/cloudflare.conf;
	proxy_set_header Accept-Encoding "";
	sub_filter
	'</head>'
	'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/ombi/aquamarine.css">
	</head>';
    location /requests/api {
    auth_request off;
    proxy_pass http://192.168.1.249:3579/requests/api;
    }
}

 location /tautulli {
	auth_request /auth-4;   #=User
   	proxy_pass http://192.168.1.249:8181;
	include /etc/nginx/config/proxy.conf;
	proxy_set_header    Host                $host;
	proxy_set_header    X-Real-IP           $remote_addr;
	proxy_set_header    X-Forwarded-Host    $server_name;
	proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
	proxy_bind 				  $server_addr;
  proxy_set_header X-Forwarded-Host 	$server_name;
	proxy_set_header X-Forwarded-Ssl     	on;
	proxy_redirect  http://  		$scheme://;
  proxy_set_header Accept-Encoding "";
          sub_filter
          '</head>'
          '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/tautulli/aquamarine.css">
          </head>';
          sub_filter_once on;

# TAUTULLI ALLOW API FOR MOBILE APP
location /tautulli/api {
	auth_request off;
	proxy_pass http://192.168.1.249:8181/tautulli/api;
	}
# TAUTULLI ALLOW SELFHOSTED NEWLETTER
location /tautulli/newsletter {
	auth_request off;
   	proxy_pass http://192.168.1.249:8181/tautulli/newsletter;
	}
# TAUTULLI ALLOW SELFHOSTED IMAGES
location /tautulli/image {
	auth_request off;
	proxy_pass http://192.168.1.249:8181/tautulli/image;
	}
}

## PLEX CONTAINER
# Plex
   location /plex/ {
     proxy_pass http://192.168.1.2:32400/;
  include /etc/nginx/config/cloudflare.conf;
  include /etc/nginx/config/proxy.conf;
     proxy_intercept_errors off;
	proxy_set_header Accept-Encoding "";
	sub_filter
	'</head>'
	'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/plex/aquamarine.css">
	</head>';
	sub_filter_once on;
   }
if ($http_referer ~* /plex/) {
            rewrite ^/web/(.*) /plex/web/$1? redirect;
        }
	proxy_buffering off;

# nzbget
  location  /nzbget {
  proxy_pass  http://10.10.0.11:6789;
  include /etc/nginx/config/cloudflare.conf;
  include /etc/nginx/config/proxy.conf;
    proxy_set_header X-Frame-Options "allow-from https://sso.themainframe.co.uk";
        proxy_set_header Accept-Encoding "";
        sub_filter
        '</head>'
        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/nzbget/aquamarine.css">
        </head>';
        sub_filter_once on;

      }
# jackett
  location  /jackett {
    auth_request /auth-1;
    proxy_pass  http://192.168.1.249:9117;
    include /etc/nginx/config/cloudflare.conf;
    include /etc/nginx/config/proxy.conf;
        location /jackett/api {
        auth_request off;
        proxy_pass http://192.168.1.249:9117/jackett/api;
        }
        proxy_set_header Accept-Encoding "";
        sub_filter
        '</head>'
        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/jackett/aquamarine.css">
        </head>';
        sub_filter_once on;
        }
}

######################### Plex ########################

# REDIRECT HTTP TRAFFIC TO https://[themainframe.co.uk]
server {
	listen 10.10.0.253:80;
	server_name PLEX.themainframe.co.uk;
	return 301 https://$server_name$request_uri;
	}

# PLEX SERVER
server {
	listen 10.10.0.253:443 ssl http2;
	server_name plex.themainframe.co.uk;

	#SSL settings
	include /etc/nginx/config/strong-ssl.conf;
	include /etc/nginx/config/cloudflare.conf;


	location / {

	proxy_pass http://192.168.1.2:32400;

	proxy_redirect off;
	proxy_buffering off;
	proxy_hide_header X-Frame-Options;

       # Spoof the request as coming from ourselves since otherwise Plex will block access, e.g. logging:
       # "Request came in with unrecognized domain / IP 'tv.example.com' in header Referer; treating as non-local"
       proxy_set_header        Host                      $server_addr;
       proxy_set_header        Referer                   $server_addr;
       proxy_set_header        Origin                    $server_addr;

       proxy_set_header        X-Real-IP                 $remote_addr;
       proxy_set_header        X-Forwarded-For           $proxy_add_x_forwarded_for;
       proxy_set_header        X-Plex-Client-Identifier  $http_x_plex_client_identifier;
       proxy_set_header        Cookie                    $http_cookie;

       ## Required for Websockets
       proxy_http_version      1.1;
       proxy_set_header        Upgrade                   $http_upgrade;
       proxy_set_header        Connection                "upgrade";
       proxy_read_timeout      36000s;                   # Timeout after 10 hours

       proxy_next_upstream     error timeout invalid_header http_500 http_502 http_503 http_504;
     }
   }



######################### PLPP ########################
server {
        listen 10.10.0.253:80;
    if ($host = plpp.themainframe.co.uk) {
        return 301 https://$host$request_uri;
    }
    server_name plpp.themainframe.co.uk;
    return 301 https://$host$request_uri;
}

server {
        listen 10.10.0.253:443 ssl http2;
  server_name plpp.themainframe.co.uk;
  access_log /var/log/nginx/media-access.log;
  error_log /var/log/nginx/media-error.log;
  include /etc/nginx/config/errorpages.conf;
  include /etc/nginx/config/sub-strong-ssl.conf;

  return 444;

# plpp
  location  / {
    proxy_pass  http://192.168.1.249:8888;
  include /etc/nginx/config/cloudflare.conf;
  include /etc/nginx/config/proxy.conf;
        proxy_set_header Accept-Encoding "";
        sub_filter
        '</head>'
        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/plpp/aquamarine.css">
        </head>';
        sub_filter_once on;
        }
  }
######################### qbitorrent ########################
server {
        listen 10.10.0.253:80;


    if ($host = qbit.themainframe.co.uk) {
        return 301 https://$host$request_uri;
    }
    server_name qbit.themainframe.co.uk;
    return 301 https://$host$request_uri;
}


server {
	listen 10.10.0.253:443 ssl http2;
  server_name qbit.themainframe.co.uk;
  access_log /var/log/nginx/media-access.log;
  error_log /var/log/nginx/media-error.log;
  include /etc/nginx/config/errorpages.conf;
  include /etc/nginx/config/sub-strong-ssl.conf;
  include /etc/nginx/config/cloudflare.conf;
  include /etc/nginx/config/proxy.conf;

  return 444;

  location / {
    proxy_pass http://10.10.0.11:9090;
  }
}

######################### Newsletter ########################

server {
 	listen 10.10.0.253:80;
 	server_name news.themainframe.co.uk;
 	return 301 https://$server_name$request_uri;
}
server {
	listen 10.10.0.253:443 ssl http2;
	server_name news.themainframe.co.uk;

	# SSL settings
	include /etc/nginx/config/sub-strong-ssl.conf;
  include /etc/nginx/config/cloudflare.conf;

location / {
	return 444;
	}

# TAUTULLI ALLOW SELFHOSTED NEWSLETTER
location /tautulli/newsletter {
	proxy_pass http://192.168.1.249:8181/tautulli/newsletter;
	proxy_bind $server_addr;
	proxy_set_header X-Forwarded-Host $server_name;
	proxy_set_header X-Forwarded-Ssl on;
	include /etc/nginx/config/proxy.conf;
    }

# TAUTULLI ALLOW SELFHOSTED IMAGES
location /tautulli/image {
	proxy_pass http://192.168.1.249:8181/tautulli/image;
	proxy_bind $server_addr;
        proxy_set_header X-Forwarded-Host $server_name;
	proxy_set_header X-Forwarded-Ssl on;
	include /etc/nginx/config/proxy.conf;
    }
}
